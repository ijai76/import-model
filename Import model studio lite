--// Stock Bot by ZEIOFFICIAL.MY.ID (original by depso)

_G.Configuration = {
    Enabled = true,

    -- Webhooks
    WebhookGearSeed = "https://discord.com/api/webhooks/1379997860711497891/BmxZs0sFKGA14JI_IsT3TTBqByAyt_pib9OWkRKD48WWNFMylHlE4VcLB9XzkLp52KMK",
    WebhookEgg = "https://discord.com/api/webhooks/1380007547682951318/kMsTAvbZRaiQTtndli4Jilenn0VKWgjmeTf7IjHjpZCtsmn3rHYZZQG7oyDc8QzcwiQ-",
    WebhookWeather = "https://discord.com/api/webhooks/1380007537226551406/RqOmTA-6ryjNMXJ-ybLwd3-6OTji0qfxj33JkSORPsu7QKHIBqA-fIgqOWH4EdzQ1YY_",

    WeatherReporting = true,

    -- Timer
    GearSeedInterval = 300, -- 5 menit
    EggInterval = 1800,     -- 30 menit
}

--// Service setup
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local VirtualUser = cloneref(game:GetService("VirtualUser"))
local RunService = game:GetService("RunService")
local GuiService = game:GetService("GuiService")

local DataStream = ReplicatedStorage.GameEvents.DataStream
local WeatherEventStarted = ReplicatedStorage.GameEvents.WeatherEventStarted
local LocalPlayer = Players.LocalPlayer

--// Last known data
local latestData = {}

--// Convert Color3 to decimal int
local function ConvertColor3(color)
    return tonumber(color:ToHex(), 16)
end

--// Make stock string
local function MakeStockString(stock)
    local str = ""
    for name, data in pairs(stock) do
        local amount = data.Stock
        local eggName = data.EggName
        name = eggName or name
        str ..= name .. " **x" .. amount .. "**\n"
    end
    return str
end

--// Get subdata by name
local function GetDataPacket(data, target)
    for _, packet in pairs(data) do
        if packet[1] == target then
            return packet[2]
        end
    end
end

--// Send webhook
local function SendWebhook(webhookUrl, fields, color)
    local body = {
        embeds = {
            {
                color = ConvertColor3(color),
                fields = fields,
                footer = { text = "ZEIOFFICIAL.MY.ID" },
                timestamp = DateTime.now():ToIsoDate()
            }
        }
    }

    local req = {
        Url = webhookUrl,
        Method = "POST",
        Headers = { ["Content-Type"] = "application/json" },
        Body = HttpService:JSONEncode(body)
    }

    task.spawn(request, req)
end

--// Handlers for each type
local function HandleGearSeed()
    if not latestData then return end

    local fields = {}
    local seeds = GetDataPacket(latestData, "ROOT/SeedStock/Stocks")
    local gears = GetDataPacket(latestData, "ROOT/GearStock/Stocks")

    if seeds then
        table.insert(fields, { name = "SEEDS STOCK", value = MakeStockString(seeds), inline = true })
    end
    if gears then
        table.insert(fields, { name = "GEAR STOCK", value = MakeStockString(gears), inline = true })
    end

    if #fields > 0 then
        SendWebhook(_G.Configuration.WebhookGearSeed, fields, Color3.fromRGB(56, 238, 23))
    end
end

local function HandleEgg()
    if not latestData then return end

    local stock = GetDataPacket(latestData, "ROOT/PetEggStock/Stocks")
    if not stock then return end

    local fields = {
        { name = "EGG STOCK", value = MakeStockString(stock), inline = true }
    }

    SendWebhook(_G.Configuration.WebhookEgg, fields, Color3.fromRGB(251, 255, 14))
end

--// Timer-based loop
task.spawn(function()
    while true do
        task.wait(_G.Configuration.GearSeedInterval)
        HandleGearSeed()
    end
end)

task.spawn(function()
    while true do
        task.wait(_G.Configuration.EggInterval)
        HandleEgg()
    end
end)

--// Save latest data on event
DataStream.OnClientEvent:Connect(function(Type, Profile, Data)
    if Type == "UpdateData" and Profile:find(LocalPlayer.Name) then
        latestData = Data
    end
end)

--// Weather reporting
WeatherEventStarted.OnClientEvent:Connect(function(event, length)
    if not _G.Configuration.WeatherReporting then return end

    local endTime = math.round(workspace:GetServerTimeNow()) + length
    local fields = {
        { name = "WEATHER", value = event .. "\nEnds: <t:" .. endTime .. ":R>", inline = true }
    }

    SendWebhook(_G.Configuration.WebhookWeather, fields, Color3.fromRGB(42, 109, 255))
end)

--// Anti AFK
LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)
